end = "", sep = ""
- sep=" " 
 이 옵션을 이용하게 되면 print문의 출력문들 사이에 해당하는 내용을 넣을 수 있습니다. 기본 값으로는 공백이 들어가 있으며 이를 사용해 원하는 문자를 입력할 수 있습니다.

- end=" "
 이 옵션의 경우 print 문을 이용해 출력을 완료한 뒤의 내용을 수정할 수 있습니다. 기본 값으로는 개행(\n)이 들어가 있으며 이를 사용해 개행을 없애거나 원하는 문자를 입력할 수 있습니다.

	print("1-1칸","1-2칸","1-3칸",end = "**end 입니다** \n")
	print("2-1칸","2-2칸","2-3칸",sep = "**sep입니다**")

	1-1칸 1-2칸 1-3칸**end 입니다**
	2-1칸**sep입니다**2-2칸**sep입니다**2-3칸


문자열 인덱싱 : 파이썬 문자열에서 한글자를 가져오는 것
	파이썬 인덱싱은 0부터 시작한다.

문자열 슬라이싱 : 문자열에서 여러 글자를 가져오는 것
	슬라이싱할 때 `시작인덱스:끝인덱스:오프셋`을 지정할 수 있습니다.
	[:] 처음부터 끝까지
	[a:] a 오프셋부터 끝까지
	[:b] 처음부터 b-1 오프셋까지
	[a:b] a 오프셋부터 b-1 오프셋까지
	[a:b:c] c만큼 문자를 건너뛰면서, a 오프셋부터 b-1 오프셋까지

replace 메서드
	파이썬 문자열에서 replace 메서드를 사용하면 문자열을 일부를 치환할 수 있습니다. 문자열은 수정할 수 없는 자료형이므로 기존 문자열은 그대로 두고 치환된 새로운 문자열이 리턴됩니다.
	*문자열은 수정할 수 없다.

split 메서드
	문자열로 표현된 url에서 `.`을 기준으로 분리합니다. 분리된 url 중 마지막을 인덱싱하면 도메인만 출력할 수 있습니다. 문자열의 split() 메서드를 사용하면 문자열에서 공백을 기준으로 분리해줍니다.

print 포맷팅
	`%s`는 문자열 데이터 타입의 값을 `%d`는 정수형 데이터 타입 값의 출력을 의미합니다.

format 메서드
	포맷 메서드는 타입과 상관없이 값이 출력될 위치에 `{ }`를 적어주면 됩니다.

f-string
	문자열 앞에 f가 붙은 형태입니다. f-string을 사용하면 `{변수}`와 같은 형태로 문자열 사이에 타입과 상관없이 값을 출력할 수 있습니다.

strip( ) 메서드
	문자열에서 strip( ) 메서드를 사용하면 좌우의 공백을 제거할 수 있습니다. 이때 원본 문자열은 그대로 유지되고 공백이 제거된 새로운 문자열이 반환됩니다.

islower() 함수
	문자의 소문자 여부를 판별합니다. 만약 소문자일 경우 True, 대문자일 경우 False를 반환합니다.

isupper() 메서드
	대문자 여부를 판단. 대문자일 때 True

upper 메서드 (<->lower 메서드)
	upper 메서드를 호출하면 문자열을 대문자로 만들 수 있습니다. 다만 이 경우에도 원본 문자열은 유지되고 대문자로 변경된 새로운 문자열 객체가 반환되는 겁니다. 반환된 새로운 객체를 새로운 변수로 바인딩한 후 이를 print 함수로 출력하면 됩니다.

capitalize 메서드
	맨 앞의 문자만 대문자로 바꿈.

endswith 메서드
	파일 이름이 문자열로 저장되어 있을 때 endswith 메서드를 사용해서 파일 이름이 'xlsx'로 끝나는지 확인해보세요.

startswith 메서드
	파일 이름이 문자열로 저장되어 있을 때 startswith 메서드를 사용해서 파일 이름이 '2020'로 시작하는지 확인해보세요.


append 메서드
	리스트에 추가

insert 메서드
	리스트의 `insert(인덱스, 원소)` 메서드를 사용하면 특정 위치에 값을 끼어넣기 할 수 있습니다.

del 메서드
	del을 이용하여 리스트에서 원소를 삭제할 수 있습니다. 리스트에서 어떤 값을 삭제하면 남은 값들은 새로 인덱싱됩니다. 따라서 여러 값을 삭제할 때는 어떤 값이 먼저 삭제된 후 남은 원소들에 대해서 순서를 새로 고려한 후 삭제해야 합니다.

sum
	print(sum(nums)) , 데이터의 합

len
	print(len(cook)) , 데이터의 개수

join 메서드
	사이에 넣다.

sort 메서드
	오름차순, [data.sort()] = [data2 = sorted(data)]

숫자 1 이 저장된 튜플을 생성하라.
	my_tuple = (1, ) //하나의 정숫값 데이터가 저장되는 경우, 쉼표를 입력해만 합니다.

튜플(주의사항)
	튜플의 값은 변경할 수 없다. replace메서드는 string타입에서만 가능. 새로운 튜플을 만들고 변수를 업데이트 해야한다. 기존의 튜플은 자동으로 삭제된다. 

튜플 range함수
	특정 구간의 숫자의 범위를 만들어주는 함수

딕셔너리
	{keys:values}, 추가: 변수[keys] = values
	딕셔너리 keys() 메서드
	딕셔너리 values() 메서드
	딕셔너리 update 메서드
	zip을 이용하면 두개의 튜필값을 딕셔너리(dict)로 변환할 수 있다.

'bool'타입
	파이썬에서 True 혹은 False를 갖는 데이터 타입
	

파이썬 문자열은 인덱싱, 슬라이싱 기능과 다양한 메서드를 제공합니다.
파이선 리스트는 순서가 있고 수정 가능한 자료구조입니다.
파이썬 튜플은 순서가 있지만 수정 불가능한 자료구조입니다.
파이썬 딕셔너리는 순서는 없지만 key와 value 형태로 데이터를 저장합니다. 특히 key는 데이터의 레이블(label)을 지정하는 용도로 자주 사용됩니다.

모듈
	시간관련 함수
		datetime.datetime.now() - 현재 날짜 및 시간 출력
		모듈.클래쓰.변수
		datetime.timedelta - 날짜조정
		strftime메서드 - 문자열 타입으로 바꾸어준다.
		strptime메서드 - 문자열을 시간타입으로 바꾸어준다.

	sleep 함수 : 호출제한

	모듈 임포트 하는 4가지 방식
		1. import os		# os.rename()
		2. from os import rename	# rename()
		3. from os import * 	# getcwd(), rename(), ...
		4. import os as myos	# myos.getcwd()

	os모듈
		getcwd() > 현재 디렉터리의 경로 확인

	numpy 모듈
		스택값을 정수 단위가 아니라 소수점 단위로 할 수 있다. (numpy.arange())

클래스
	클래스 : 붕어빵 틀과 같은 것, 객체나 인스턴스의 설계도
	객체(object)

	* 사용자가 만든 클래쓰는 첫글자에 대문자를 쓴다. (ex, class Human:)

	클래스 생성자 추가:
	class Human:
	    def __init__(self):

	클래스 생성자 수정
	areum.setInfo()

	클래스 소멸자
	del areum

random 모듈
	random.randint(0, 99) # 0 <= i <= 99

	zfill메서드
		.zfill(5) > 5자리로 변경

	Account클래스

class variable
	각각의 개체에서 참조하는게 아니라 변수들을 통합하는

클래스 메써드
	@classmethod
	def get_account_num(cls):	# cls 는 self가아닌 객체에 넣지 않아도 되는 값이기에 

인스턴스 메서드
	__init__ (self,


